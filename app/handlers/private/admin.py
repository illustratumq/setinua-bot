from aiogram import Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.types import Message

from app.config import Config
from app.filters.admin import IsAdminFilter
from app.keyboards.reply.admin import admin_kb, status_kb, user_actions_kb
from app.keyboards.reply.back import cancel_kb
from app.keyboards.reply.calendar import calendar_kb
from app.misc.enums import UserStatusEnum, SubStatusEnum
from app.misc.utils import construct_user_status, get_status
from app.services.repos import CalendarRepo, UserRepo, SubRepo, EventRepo
from app.states.calendar import CalendarSG
from data.googlecalendar.calendar_api import GoogleCalendar
from app.states.inputs import ImportSG, UserStatusSG
from data.googlesheets.sheets_api import GoogleSheet


async def admin_menu(msg: Message):
    await msg.answer('–í–∏ —É–≤—ñ–π—à–ª–∏ –¥–æ –ø–∞–Ω–µ–ª—ñ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞', reply_markup=admin_kb)


async def create_calendar(msg: Message):
    text = (
        '–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –∫–∞–ª–µ–Ω–¥–∞—Ä—é –¥–æ 150 —Å–∏–º–≤–æ–ª—ñ–≤ (–∑–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É, —â–æ –Ω–∞–∑–≤–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è '
        '–≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ –∞—Ä–µ–Ω–¥–∏)'
    )
    await msg.answer(text, reply_markup=cancel_kb)
    await CalendarSG.Name.set()


async def save_calendar_name(msg: Message, state: FSMContext):
    if len(msg.text) > 150:
        return await msg.answer(f'–í–∞—à–∞ –Ω–∞–∑–≤–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –¥–æ 150 —Å–∏–º–≤–æ–ª—ñ–≤, –∑–∞–º—ñ—Å—Ç—å {len(msg.text)}')
    text = (
        '–í–≤–µ–¥—ñ—Ç—å –æ–ø–∏—Å –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–æ 500 —Å–∏–º–≤–æ–ª—ñ–≤ (–∑–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É, —â–æ –æ–ø–∏—Å –∫–∞–ª–µ–Ω–¥–∞—Ä—è '
        '–≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ –∞—Ä–µ–Ω–¥–∏)'
    )
    await msg.answer(text, reply_markup=cancel_kb)
    await state.update_data(name=msg.text)
    await CalendarSG.Description.set()


async def save_calendar_description(msg: Message, state: FSMContext):
    if len(msg.text) > 300:
        return await msg.answer(f'–í–∞—à –æ–ø–∏—Å –∫–∞–ª–µ–Ω–¥–∞—Ä—è –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –¥–æ 500 —Å–∏–º–≤–æ–ª—ñ–≤, –∑–∞–º—ñ—Å—Ç—å {len(msg.text)}')
    text = (
        '–í–≤–µ–¥—ñ—Ç—å –ª–æ–∫–∞—Ü—ñ—é –¥–æ 300 —Å–∏–º–≤–æ–ª—ñ–≤ (–∑–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É, —â–æ –ª–æ–∫–∞—Ü—ñ—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è '
        '–≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ –∞—Ä–µ–Ω–¥–∏)'
    )
    await msg.answer(text, reply_markup=cancel_kb)
    await state.update_data(description=msg.text)
    await CalendarSG.Location.set()


async def save_calendar_location(msg: Message, state: FSMContext):
    if len(msg.text) > 300:
        return await msg.answer(f'–í–∞—à–∞ –ª–æ–∫–∞—ñ—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –¥–æ 300 —Å–∏–º–≤–æ–ª—ñ–≤, –∑–∞–º—ñ—Å—Ç—å {len(msg.text)}')
    await state.update_data(location=msg.text)
    data = await state.get_data()
    google_calendar_link = 'https://calendar.google.com/calendar'
    text = (
        f'üìÜ –ö–∞–ª–µ–Ω–¥–∞—Ä\n\n'
        f'–ù–∞–∑–≤–∞: {data["name"]}\n'
        f'–û–ø–∏—Å: {data["description"]}\n'
        f'–õ–æ–∫–∞—Ü—ñ—è: {msg.text}\n\n'
        f'–î–æ–¥–∞–π—Ç–µ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–∞–ª–µ–Ω–¥–∞—Ä—è.\n\n'
        f'1Ô∏è‚É£ –ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ <a href="{google_calendar_link}">–ì—É–≥–ª –∫–∞–ª–µ–Ω–¥–∞—Ä.</a>\n'
        f'2Ô∏è‚É£ –í–∏–±–µ—Ä—ñ—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä —è–∫–∏–π —Ö–æ—á–µ—Ç–µ –¥–æ–¥–∞—Ç–∏ –≤ –±–æ—Ç–∞ —ñ–∑ —Å–ø–∏—Å–∫–∞ –ª—ñ–≤–æ—Ä—É—á. '
        f'–û–±–µ—Ä—ñ—Ç—å "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —ñ –¥–æ—Å—Ç—É–ø".\n'
        f'3Ô∏è‚É£ –£ —Ä–æ–∑–¥—ñ–ª—ñ –¥–æ—Å—Ç—É–ø –æ–∫—Ä–µ–º–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å "–î–æ–¥–∞—Ç–∏ –ª—é–¥–µ–π"\n'
        f'4Ô∏è‚É£ –í–≤–µ–¥—ñ—Ç—å –ø–æ—à—Ç—É —Å–µ—Ä–≤—ñ—Å–Ω–æ–≥–æ –∞–∫–∞—É–Ω—Ç—É* —Ç–∞ —É –≤–∫–ª–∞–¥—Ü—ñ "–î–æ—Å—Ç—É–ø" –æ–±–µ—Ä—ñ—Ç—å '
        f'"–í–Ω–æ—Å–∏—Ç–∏ –∑–º—ñ–Ω–∏ –π –∫–µ—Ä—É–≤–∞—Ç–∏ —Å–ø—ñ–ª—å–Ω–∏–º –¥–æ—Å—Ç—É–ø–æ–º"\n'
        f'5Ô∏è‚É£ –£ –≤–∫–ª–∞–¥—Ü—ñ "–Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è" —Å–∫–æ–ø—ñ—é–π—Ç–µ –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Ç–∞ –Ω–∞–¥—ñ–ª—à—ñ—Ç—å –º–µ–Ω—ñ.\n\n'
        f'* - setcalendar@setinuacalendar.iam.gserviceaccount.com'
    )
    await msg.answer(text, reply_markup=cancel_kb)
    await CalendarSG.Mail.set()


async def save_calendar_mail(msg: Message, state: FSMContext, calendar: GoogleCalendar):
    await msg.delete()
    await state.update_data(mail=msg.text)
    try:
        await msg.answer('‚è≥')
        await msg.answer('–ü–µ—Ä–µ–≤—ñ—Ä—è—é –∫–∞–ª–µ–Ω–¥–∞—Ä')
        calendar.get(msg.text)
    except Exception as Error:
        await msg.answer(f'–ù–µ –∑–º—ñ–≥ –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—å. –ü–æ–º–∏–ª–∫–∞: {str(Error).replace("<", "").replace(">", "")}')
        return
    await msg.answer('‚úÖ –ö–∞–ª–µ–Ω–¥–∞—Ä –∑–Ω–∞–π–¥–µ–Ω–æ')
    await msg.answer('–ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—é', reply_markup=calendar_kb)
    await CalendarSG.Confirm.set()


async def save_calendar(
        msg: Message, state: FSMContext, calendar_db: CalendarRepo,
        calendar: GoogleCalendar
):
    await msg.answer('‚è≥')
    msg = await msg.answer('–ü—ñ–¥–∫–ª—é—á–∞—é—Å—å –¥–æ –ì—É–≥–ª')
    data = await state.get_data()
    calendar.insert_calendar(data['mail'])
    calendar = calendar.update_calendar(
        calendar_id=data['mail'],
        summary=data['name'],
        description=data['description'],
        location=data['location']
    )
    msg = await msg.edit_text('‚è≥ –°—Ç–≤–æ—Ä—é—é –∫–∞–ª–µ–Ω–¥–∞—Ä')
    calendar = await calendar_db.add(
        name=data['name'],
        description=data['description'],
        location=data['location'],
        google_id=calendar['id']
    )
    await msg.edit_text(f'–°—Ç–≤–æ—Ä–µ–Ω–æ –∫–∞–ª–µ–Ω–¥–∞—Ä #{calendar.calendar_id}')
    await state.finish()
    await calendar_list(msg, calendar_db)


async def calendar_list(msg: Message, calendar_db: CalendarRepo):
    calendars = await calendar_db.get_all()
    if len(calendars) == 0:
        return await msg.answer('–í–∏ —â–µ –Ω–µ –¥–æ–¥–∞–ª–∏ –∂–æ–¥–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è')
    text = ''
    for calendar in calendars:
        text += (
            f'üóì –ö–∞–ª–µ–Ω–¥–∞—Ä #{calendar.calendar_id}\n'
            f'<b>–ù–∞–∑–≤–∞</b>: {calendar.name}\n'
            f'<b>–û–ø–∏—Å</b>: {calendar.description}\n'
            f'<b>–õ–æ–∫–∞—Ü—ñ—è</b>: {calendar.location}\n'
            f'<b>GoogleId</b>: {calendar.google_id}\n\n'
        )
    await msg.answer(text, reply_markup=admin_kb)


async def import_calendar(msg: Message):
    await msg.answer('–í–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä')
    await ImportSG.Input.set()


async def user_search(msg: Message):
    await msg.answer('–í–≤–µ–¥—ñ—Ç—å id –∫–æ—Ä–∏—Ç—É–≤–∞—á–∞ üëá')
    await UserStatusSG.User.set()


async def user_actions(msg: Message, user_db: UserRepo, event_db: EventRepo,
                       config: Config, state: FSMContext):
    user = await user_db.get_user(int(msg.text))
    if user is None:
        await msg.answer('–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Ç–∞–∫–∏–º id –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑')
        return
    else:
        user_link = 'https://docs.google.com/spreadsheets/d/{}/edit#gid=0&range=A{}:D{}'.format(
            config.misc.spreadsheet, user.spreadsheet_id, user.spreadsheet_id
        )
        events = await event_db.get_events(user.user_id)
        user_events = ''
        for event in events:
            user_events += f'–û—Ä–µ–Ω–¥–∞ ‚Ññ{event.event_id} ({get_status(event)})'
        text = (
            f'–Ü–º\'—è: {user.full_name}\n'
            f'–¢–µ–ª–µ—Ñ–æ–Ω: {user.phone_number}\n'
            f'–ì–æ–¥–∏–Ω –æ—Ä–µ–Ω–¥–∏: {user.hours}\n'
            f'–°—Ç–∞—Ç—É—Å: <a href="{user_link}">{construct_user_status(user)}</a>\n\n'
            f'–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é üëá'
        )
        await msg.answer(text, reply_markup=user_actions_kb)
        await state.update_data(user_id=user.user_id)
        await UserStatusSG.Actions.set()


async def user_status(msg: Message):
    await UserStatusSG.Status.set()
    await msg.answer('–û–±–µ—Ä—ñ—Ç—å —Å—Ç–∞—Ç—É—Å –∫–ª—ñ—î–Ω—Ç–∞ üëá', reply_markup=status_kb)


async def user_hours(msg: Message):
    await msg.answer('–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–¥–∏–Ω üëá')
    await UserStatusSG.Hours.set()


async def user_add_hours(msg: Message, sub_db: SubRepo, state: FSMContext):
    data = await state.get_data()
    if str(msg.text).isnumeric():
        await sub_db.add(
            spreadsheet_id=len(await sub_db.get_all()) + 1,
            user_id=data['user_id'],
            description='–î–æ–¥–∞–Ω—ñ –≥–æ–¥–∏–Ω–∏',
            total_hours=float(msg.text),
            status=SubStatusEnum.ACTIVE,
            price=0
        )
        await msg.bot.send_message(chat_id=data['user_id'],
                                   text=f'–ù–∞ –≤–∞—à —Ä–∞—Ö—É–Ω–æ–∫ –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ {float(msg.text)} –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏—Ö –≥–æ–¥–∏–Ω')
        await msg.answer('–ì–æ–¥–∏–Ω–∏ –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω—ñ')
        await state.finish()
        await admin_menu(msg)


async def user_status_change(msg: Message, user_db: UserRepo, state: FSMContext, sheet: GoogleSheet, config: Config):
    data = await state.get_data()
    if msg.text == '–ù–æ–≤–∏–π –∫–ª—ñ—î–Ω—Ç':
        status = UserStatusEnum.COMMON
    elif msg.text == '–ü–æ—Å—Ç—ñ–π–Ω–∏–π –∫–ª—ñ—î–Ω—Ç':
        status = UserStatusEnum.REGULAR
    elif msg.text == '–í–Ü–ü':
        status = UserStatusEnum.VIP
    else:
        status = UserStatusEnum.TRAINER
    await user_db.update_user(data['user_id'], status=status)
    user = await user_db.get_user(int(data['user_id']))
    sheet.write_user(user, config.misc.spreadsheet)
    await msg.bot.send_message(chat_id=data['user_id'], text=f'–í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –Ω–æ–≤–∏–π —Å—Ç–∞—Ç—É—Å! {msg.text}')
    await state.finish()
    await msg.answer('–°—Ç–∞—Ç—É—Å –∑–º—ñ–Ω–µ–Ω–æ')
    await admin_menu(msg)


def setup(dp: Dispatcher):
    dp.register_message_handler(admin_menu, Command('admin'), IsAdminFilter(), state='*')
    dp.register_message_handler(calendar_list, text='–Ü—Å–Ω—É—é—á—ñ üóì', state='*')
    dp.register_message_handler(user_search, text='–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ', state='*')
    dp.register_message_handler(create_calendar, text='–î–æ–¥–∞—Ç–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä ‚ûï', state='*')

    dp.register_message_handler(save_calendar_name, state=CalendarSG.Name)
    dp.register_message_handler(save_calendar_description, state=CalendarSG.Description)
    dp.register_message_handler(save_calendar_location, state=CalendarSG.Location)
    dp.register_message_handler(save_calendar_mail, state=CalendarSG.Mail)
    dp.register_message_handler(user_actions, state=UserStatusSG.User)
    dp.register_message_handler(user_status, state=UserStatusSG.Actions, text='–ó–º—ñ–Ω–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å')
    dp.register_message_handler(user_hours, state=UserStatusSG.Actions, text='–î–æ–¥–∞—Ç–∏ –≥–æ–¥–∏–Ω–∏')
    dp.register_message_handler(user_status_change, state=UserStatusSG.Status)
    dp.register_message_handler(user_add_hours, state=UserStatusSG.Hours)

    dp.register_message_handler(save_calendar, state=CalendarSG.Confirm, text='–ü—ñ–¥—Ç–≤–µ–¥–∂—É—é ‚úÖ')


